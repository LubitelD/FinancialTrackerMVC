@model IEnumerable<FinancialTrackerDomain.Model.Transaction>

@{
    ViewData["Title"] = "Index";
}

<h1>Transactions</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="row">
    <div class="col-1">
        <div id="countByCategoryTypeChart"></div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawCharts);

        function drawCharts() {
            fetch('/api/charts/countByCategoryType')
                .then(response => response.json())
                .then(data => {
                    const dataTable = new google.visualization.DataTable();
                    dataTable.addColumn('string', 'Категорія');
                    dataTable.addColumn('number', 'Кількість транзакцій даного типу');

                    data.forEach(item => {
                        dataTable.addRow([item.categoryType, item.count]);
                    });

                    const options = {
                        title: 'Графік транзакцій',
                        colors: ['#9370DB', '#9370DB'],    // перший стовпець – синій, другий – червоний
                        series: {
                            0: { color: '#9370DB', visibleInLegend: true },
                            1: { color: '#9370DB', visibleInLegend: true }
                        },
                        width: 600,
                        height: 400,
                        legend: { position: 'none' },
                    };

                    const chart = new google.visualization.ColumnChart(document.getElementById('countByCategoryTypeChart'));

                    chart.draw(dataTable, options);
                });
        }
    </script>
}

       

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinancialGoal)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.EmailAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Budget.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FinancialGoal.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
